
/*


1401. Circle and Rectangle Overlapping

The circle is considered to overlap with the rectangle if any part of the circle's boundary touches or crosses the rectangle's boundary. 

we've already found the nearest point (nearest_x, nearest_y) to the circle's center that lies on the rectangle's boundary.

The condition dist_x * dist_x + dist_y * dist_y <= radius * radius is checking if the squared distance between the circle's center and this nearest point is less than or equal to the squared radius. If it is, it confirms that the circle overlaps with the rectangle.


*/








class Solution {
public:
    bool checkOverlap(int radius, int xCenter, int yCenter, int x1, int y1, int x2, int y2) {
        // Find the nearest point on the rectangle to the center of the circle
        int nearest_x = std::max(x1, std::min(x2, xCenter));
        int nearest_y = std::max(y1, std::min(y2, yCenter));
        
        // Calculate the distance between the nearest point and the center of the circle in both x and y dimensions
        int dist_x = nearest_x - xCenter;
        int dist_y = nearest_y - yCenter;
        
        // Check if the square of the distance is less than or equal to the square of the radius
        // This is a faster computation than taking square roots
        return dist_x * dist_x + dist_y * dist_y <= radius * radius;
    }
};